Regular Expression:A Regular Expression (RegEx) is a sequence of characters that defines a search pattern.
Methods in regular expression:
findall()- the given string whether matches the given pattern.
search()-to find the position of given pattern and it should be return in match object.
match object-Start(),span(),string
split()-used the split the given string.
sub()-from the given string one character should be replaced by another character.

1.Findall method:
examples for findall:
import re 
str='hi harish'
result=re.findall('ha',str)
print(result)

import re
str1='harishmahes06@gmail.com'
pattern=re.compile('@')
result=re.findall(pattern,str1)
print(result) 

2.Search method: 
             Start()
             Span()
             string
Examples:
import re
str2='hi harish'
result=re.search('har',str2)
print(result)  
#Start()
import re
str2='hi harish'
result=re.search('har',str2)
print(type(result)) output:3
print(result.start())- in given pattern starting position index will be noted.
#span()
import re
str2='python'
result=re.search('python',str2)
print(result.span())
output:(0,6)
#String:
import re
str2='python'
result=re.search('py',str2)
print(result.string) 
3.Split method:
Examples:
import re
str3="hello harish"
result=re.split("hello",str3)
print(result) output:['','harish']

import re
str3="hello harish"
result=re.split("h",str3)
print(result) output:['','ello','aris','']

import re
str3="hello harish"
result=re.split(" ",str3)
print(result) output:['hello','harish'] 

import re
str3='hi harish have a nice day'
result=re.split(' ',str3,3)
print(result) output:['hi', 'harish', 'have', 'a nice day']

4.sub method:

Examples:
import re
str3='hi harish have a nice day'
result=re.sub(' ','-',str3)
print(result) output:hi-harish-have-a-nice-day

import re
str3='hi harish have a nice day'
result=re.sub('h','H',str3,2)
print(result) output:Hi Harish have a nice day

META characters:
[]-A set of characters,
\d-digit,
^-starts with,
$-ends with,
.-any character,
*-zero or more occurences 
+-one or more occurences
{}-specify the number of occurences 

Special characters:
\s-Returns a match where the string contains a white space character	 
\S-Returns a match where the string DOES NOT contain a white space character	
\d- string contain digits
\D- string contain without digits 
\w- the string contains any word characters (characters from a to Z, digits from 0-9, and the underscore _ character) but not spaces.
\W-Matches any non-alphanumeric character


regular expression problems:

import re
def validate_phone_number(phonenumber):
    pattern="^[789]\d{9}$"
    if re.match(pattern,phonenumber):
        return True
    else:
        return False
phonenumber=["7639216642","6381543413",'88888888']
for i in phonenumber:
    if validate_phone_number(i):
        print(i,"valid Indian phone number")
    else:
        print(i,"not valid Indian phone number")
#list of mail id is valid or not:
email id:example@gmail.com 
import re 
def validemail(email):
    pattern=r"^[a-zA-Z0-9.%+-]+@[a-zA-Z]{5}\.[a-z]{2,3}$"
    return(bool(re.match(pattern,email)))
email="user@gmail.com"
if validemail(email):
    print(email,"valid email id")
else:
    print(email,"not valid email id")